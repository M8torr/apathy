plugins {
	id "fabric-loom" version "0.10-SNAPSHOT"
	id "maven-publish"
	id "idea"
}

archivesBaseName = "${project.mod_name}-${project.minecraft_version}-fabric"
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	
	implementation project(":common")
}

loom {
	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Fabric Server")
			ideConfigGenerated(true)
			runDir("run")
		}
	}
}

processResources {
	from project(":common").sourceSets.main.resources
	inputs.property "version", project.version
	
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	
	//Crusty refmap things
	filesMatching(["apathy.mixins-common.json", "apathy.mixins-fabric.json"]) {
		//running with --info gives "Could not find refmap definition, will be using default name: apathy-1.18.1-2.0-fabric-refmap.json"
		//and loom/mixin annotation processor/something writes the refmap to that exact file location
		//idk where exactly this comes from, and i don't know how to change it, so lemme just... try to recreate that filename lol
		//see https://github.com/FabricMC/fabric-loom/blob/dev/0.10/src/main/java/net/fabricmc/loom/extension/MixinExtensionImpl.java
		expand "refmap_target": archivesBaseName + "-refmap.json"
		//btw, my mixin jsons look like this: `"refmap": "${refmap_target}"`
		//multiloader-template puts the variable substitution in a different place. just something to keep in mind
	}
}

tasks.withType(JavaCompile) {
	source(project(":common").sourceSets.main.allSource)
}