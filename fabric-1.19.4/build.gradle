plugins {
	id "fabric-loom" version "1.1.10"
}

archivesBaseName = "${project.modId}-fabric-1.19.4"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

/// deps ///

dependencies {
	//basics
	minecraft "com.mojang:minecraft:1.19.4"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:0.14.17"
	
	//fabric api, TODO trim down to required modules
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.76.0+1.19.4"
	
	//xplat
	implementation project(":common-1.19.4")
}

//fold in xplat resources and sources

processResources {
	from project(":common-1.19.4").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
	source(project(":common-1.19.4").sourceSets.main.allSource)
}

//loom doesn't generate run configs by default in subprojects
loom {
	runs {
		client {
			client()
			setConfigName("Fabric 1.19.4 Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Fabric 1.19.4 Server")
			ideConfigGenerated(true)
			runDir("run")
		}
	}
	
	//nor can it figure out the refmap name in this situation
	mixin {
		defaultRefmapName = "${project.modId}.refmap.json"
		
		//see https://github.com/FabricMC/fabric-loom/issues/456
		//todo, maybe also fixable by updating floader?
		useLegacyMixinAp = true
	}
}