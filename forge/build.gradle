buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven {
			url = 'https://repo.spongepowered.org/repository/maven-public/'
			content { includeGroup "org.spongepowered" }
		}
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "${project.modId}-${project.minecraftVersion}-forge"

/// deps ///

dependencies {
	minecraft "net.minecraftforge:forge:${project.forgeVersion}"
	compileOnly project(":common")
	
	//Oops all refmaps
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.withType(JavaCompile) {
	source(project(":common").sourceSets.main.allSource)
}

/// resources ///

//sourceSets.main.resources.srcDir 'src/generated/resources' //Idk why this was here!

processResources {
	//include common resources
	from project(":common").sourceSets.main.resources
	
	//substitute in version
	inputs.property "version", project.version
	filesMatching(["mods.toml", ".*mods.toml", "**/mods.toml"]) {//Fucing work please!!!!!!!!!!
		expand "version": project.version
	}
}

/// mixin ///

mixin {
	//Tell mixingradle what filename the refmap should use
	add sourceSets.main, "${project.modId}.refmap.json"
	
	//Tell mixingradle which mixin configs exist
	config "${project.modId}.mixins-common.json"
	config "${project.modId}.mixins-forge.json"
}

/// runs ///

minecraft {
	//Dep on official mappings
	mappings channel: 'official', version: project.minecraftVersion
	
	runs {
		client {
			taskName 'Client'
			workingDirectory project.file('run')
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				"${project.modId}" {
					source sourceSets.main
					source project(":common").sourceSets.main
				}
			}
		}
		
		server {
			taskName 'Server'
			workingDirectory project.file('run')
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				"${project.modId}" {
					source sourceSets.main
					source project(":common").sourceSets.main
				}
			}
		}
	}
}

/// Idk what this is or if it has a purpose, but it's conventional to include it in forge mods ///
/// it adds MANIFEST.MF properties ///

jar {
	manifest {
		attributes([
			"Specification-Title": "Apathy",
			"Specification-Vendor": "quaternary",
			"Specification-Version": "1",
			"Implementation-Title": "Apathy",
			"Implementation-Version": "${archiveVersion.get()}",
			"Implementation-Vendor": "quaternary"
		])
	}
	finalizedBy 'reobfJar'
}